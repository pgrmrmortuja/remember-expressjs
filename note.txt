ЁЯФ╕ ржХрзЛржб:
const express = require("express");
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
const:
ржПржЯрж┐ ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯрзЗрж░ ржПржХржЯрж┐ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓ ржбрж┐ржХрзНрж▓рзЗржпрж╝рж╛рж░ ржХрж░рж╛рж░ ржЙржкрж╛ржпрж╝ред const ржжрж┐рзЯрзЗ ржмрзЛржЭрж╛рзЯ ржПржЗ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗрж░ ржорж╛ржи (value) ржкрж░ржмрж░рзНрждрзАрждрзЗ ржЖрж░ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ред

express:
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ express ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓ рждрзИрж░рж┐ ржХрж░рзЗржЫрж┐, ржпрж╛рждрзЗ ржЖржорж░рж╛ Express.js рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ (framework) рж▓рзЛржб ржХрж░ржмрзЛред

require("express"):
ржПржЯрж┐ Node.js ржПрж░ ржПржХржЯрж┐ ржмрж┐рж▓рзНржЯ-ржЗржи ржлрж╛ржВрж╢ржи, ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ ржЖржорж░рж╛ Express рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ржХрзЗ ржПржЗ ржлрж╛ржЗрж▓рзЗрж░ ржоржзрзНржпрзЗ ржирж┐рзЯрзЗ ржЖрж╕рж┐ред
ржорж╛ржирзЗ рж╣рж▓рзЛ тАФ ржЖржорж░рж╛ ржПржЦржи ржерзЗржХрзЗ express рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐рж░ ржлрж┐ржЪрж╛рж░ржЧрзБрж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЛред

ЁЯФБ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
ржЖржорж░рж╛ Express.js framework ржХрзЗ ржЖржорж╛ржжрзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржирж┐рзЯрзЗ ржПрж╕рзЗржЫрж┐ред

ЁЯФ╕ ржХрзЛржб:
const app = express();
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
ржЖржорж░рж╛ ржПржЦрж╛ржирзЗ express() ржлрж╛ржВрж╢ржиржХрзЗ ржХрж▓ ржХрж░рзЗржЫрж┐ тАФ ржПржЯрж╛ Express ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рзЗред

ржПржЗ ржЕржмржЬрзЗржХрзНржЯ (app) ржЖржорж╛ржжрзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░ рждрзИрж░рж┐ ржХрж░рждрзЗ, рж░рж╛ржЙржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ, API ржмрж╛ржирж╛рждрзЗ, ржПржмржВ ржмрж┐ржнрж┐ржирзНржи рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржмрзЗред

ЁЯФБ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ ржЖржорж╛ржжрзЗрж░ ржорзЗржЗржи ржЕрзНржпрж╛ржк ржЕржмржЬрзЗржХрзНржЯ, ржпрж╛рж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛ рж╕ржм ржХрж╛ржЬ ржХрж░ржмрзЛред

ЁЯФ╕ ржХрзЛржб:
app.listen(5000, () => {
    console.log("The Server is Running on 5000 Port");
});
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
app.listen(5000, ...):
ржПржЗ рж▓рж╛ржЗржирзЗ ржЖржорж╛ржжрзЗрж░ Express ржЕрзНржпрж╛ржк рзлрзжрзжрзж ржиржорзНржмрж░ ржкрзЛрж░рзНржЯрзЗ рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ ржХрж░ржЫрзЗред
ржкрзЛрж░рзНржЯ ржорж╛ржирзЗ рж╣рж▓рзЛ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржжрж░ржЬрж╛ (channel) ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ рж╕рж╛рж░рзНржнрж╛рж░ ржмрж╛ржЗрж░рзЗрж░ ржЬрж┐ржирж┐рж╕рзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзЗред

() => { ... }:
ржПржЯрж┐ рж╣рж▓рзЛ Arrow Function, ржпрж╛ рждржЦржи ржЪрж╛рж▓рзБ рж╣рзЯ ржпржЦржи рж╕рж╛рж░рзНржнрж╛рж░ рж╢рзБрж░рзБ рж╣рзЯред

console.log("..."):
ржПржЯрж╛ рж╣рж▓рзЛ ржЖржЙржЯржкрзБржЯ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржлрж╛ржВрж╢ржиред
ржПржЦрж╛ржирзЗ ржХржирж╕рзЛрж▓рзЗ рж▓рзЗржЦрж╛ ржжрзЗржЦрж╛ржмрзЗ: "The Server is Running on 5000 Port" тАФ ржпрж╛рждрзЗ ржЖржорж░рж╛ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж▓ржЫрзЗред

ЁЯФБ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
ржПржЗ рж▓рж╛ржЗржирзЗ ржЖржорж╛ржжрзЗрж░ ржЕрзНржпрж╛ржк рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ ржХрж░ржЫрзЗ ржПржмржВ ржкрзЛрж░рзНржЯ рзлрзжрзжрзж-ржП рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржирзЗржУржпрж╝рж╛рж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБржд ржЖржЫрзЗред

тЬЕ рж╕ржм ржорж┐рж▓рж┐рзЯрзЗ ржХрзЛржбржЯрж┐ ржХрзА ржХрж░рзЗ?
рждрзЛржорж╛рж░ ржПржЗ ржХрзЛржбржЯрж┐ ржПржХржЯрж╛ ржмрзЗрж╕рж┐ржХ Express.js рж╕рж╛рж░рзНржнрж╛рж░ рждрзИрж░рж┐ ржХрж░ржЫрзЗ, ржпрзЗржЯрж╛ рзлрзжрзжрзж ржиржорзНржмрж░ ржкрзЛрж░рзНржЯрзЗ ржЪрж▓ржЫрзЗред
рждрзБржорж┐ ржпржжрж┐ ржПржЦржи ржПржЗ ржлрж╛ржЗрж▓ржЯрж┐ ржЪрж╛рж▓рж╛ржУ (node index.js ржжрж┐рзЯрзЗ), рждрж╛рж╣рж▓рзЗ ржХржирж╕рзЛрж▓рзЗ ржжрзЗржЦрж╛ржмрзЗ:
The Server is Running on 5000 Port

ЁЯФ╕ app.get("/", (req, res) => { ... })
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
app.get(...):
ржПржЯрж╛ Express-ржПрж░ ржлрж╛ржВрж╢ржи тАФ ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛ ржмрж▓ржЫрж┐, ржпржЦржи ржХрзЗржЙ ржХрзЛржирзЛ GET рж░рж┐ржХрзБржпрж╝рзЗрж╕рзНржЯ ржХрж░рзЗ ржПржЗ path-ржП, рждржЦржи ржХрзА рж╣ржмрзЗред

"/":
ржПржЯрж╛ рж╣рж▓рзЛ рж░рзБржЯ ржкрж╛рже (root path)ред ржорж╛ржирзЗ ржХрзЗржЙ ржпржжрж┐ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ http://localhost:5000/ рж▓рзЗржЦрзЗ тАФ рждржЦржи ржПржЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржХрж╛ржЬ ржХрж░ржмрзЗред

(req, res) => { ... }:
ржПржЯрж╛ ржПржХржЯрж┐ callback function тАФ ржорж╛ржирзЗ, ржпржЦржи рж░рж┐ржХрзБржпрж╝рзЗрж╕рзНржЯ ржЖрж╕рзЗ, рждржЦржи ржПржЗ ржлрж╛ржВрж╢ржи ржЪрж▓ржмрзЗред

req: ржПрж░ ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ Request тАФ ржпрзЗржЯрж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗред

res: ржПрж░ ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ Response тАФ ржпрзЗржЯрж╛ ржЖржорж░рж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржкрж╛ржарж╛ржмрзЛред

ЁЯФ╕ res.send("The Server is Working");
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
res.send(...) ржжрж┐рзЯрзЗ ржЖржорж░рж╛ рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржарж╛ржЗред ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ "The Server is Working" ржкрж╛ржарж╛ржЪрзНржЫрж┐ред

ржорж╛ржирзЗ, ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржЧрж┐рзЯрзЗ http://localhost:5000/ рж▓рж┐ржЦрж▓рзЗ ржжрзЗржЦрж╛ ржпрж╛ржмрзЗ ржПржЗ ржорзЗрж╕рзЗржЬржЯрж╛ред

ЁЯФ╕ app.get("/users", (req, res) => { ... })
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
ржПржЗ рж▓рж╛ржЗржи ржжрж┐рзЯрзЗ ржЖржорж░рж╛ /users ржирж╛ржорзЗрж░ ржПржХржЯрж╛ ржирждрзБржи route рждрзИрж░рж┐ ржХрж░рзЗржЫрж┐ред

ржХрзЗржЙ ржпржжрж┐ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржЧрж┐рзЯрзЗ рж▓рзЗржЦрзЗ: http://localhost:5000/users
рждржЦржи ржПржЗ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рзБ рж╣ржмрзЗред

ЁЯФ╕ res.send([]);
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржПржХржЯрж┐ ржЦрж╛рж▓рж┐ ржЕрзНржпрж╛рж░рзЗ ([]) ржкрж╛ржарж╛ржЪрзНржЫрж┐ред

ржнржмрж┐рж╖рзНржпрждрзЗ ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ рж╣рзЯрждрзЛ ржЗржЙржЬрж╛рж░ржжрзЗрж░ рж▓рж┐рж╕рзНржЯ ржкрж╛ржарж╛ржмрзЛ, ржХрж┐ржирзНрждрзБ ржПржЦржи ржПржЯрж╛ ржЦрж╛рж▓рж┐ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗред


ЁЯФ╕ app.use(express.json());
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
app.use(...):
Express-ржП use() ржжрж┐рзЯрзЗ ржЖржорж░рж╛ middleware ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред

express.json():
ржПржЯрж╛ ржПржХржЯрж┐ middleware function ржпрж╛ Express ржПрж░ ржоржзрзНржпрзЗ build-in ржЖржЫрзЗред
ржПрж░ ржХрж╛ржЬ: ржпржЦржи ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ (ржпрзЗржоржи Postman ржмрж╛ ржлрзНрж░ржирзНржЯржПржирзНржб) ржерзЗржХрзЗ JSON ржлрж░ржорзНржпрж╛ржЯрзЗ ржбрзЗржЯрж╛ ржкрж╛ржарж╛ржирзЛ рж╣рзЯ (body-ржПрж░ ржоржзрзНржпрзЗ), рждржЦржи ржПржЗ middleware рж╕рзЗржЯрж╛ржХрзЗ parse ржХрж░рзЗ рж╕рж╣ржЬржнрж╛ржмрзЗ req.body рждрзЗ рж░рзЗржЦрзЗ ржжрзЗрзЯред

ЁЯУМ ржПржХ ржХржерж╛рзЯ: ржПржЗ рж▓рж╛ржЗржи ржирж╛ ржжрж┐рж▓рзЗ req.body ржХрж╛ржЬ ржХрж░рждрзЛ ржирж╛ред ржорж╛ржирзЗ, ржЖржорж░рж╛ ржбрзЗржЯрж╛ ржкрзЗрждрж╛ржо ржирж╛ред

ЁЯФ╕ app.post("/users", (req, res) => { ... })
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
app.post(...):
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ POST рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░ржЫрж┐ /users рж░рзБржЯрзЗред

тЮд POST рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯ ржпржЦржи ржЖржорж░рж╛ ржирждрзБржи ржбрзЗржЯрж╛ ржкрж╛ржарж╛рждрзЗ ржмрж╛ рж╕рж╛рж░рзНржнрж╛рж░рзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рждрзЗ ржЪрж╛ржЗред

"/users":
URL ржкрж╛рже тАФ ржпрзЗржоржи http://localhost:5000/users

(req, res) => { ... }:
ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи, ржпрж╛ ржЪрж▓ржмрзЗ ржпржЦржи ржХрзЗржЙ /users рж░рзБржЯрзЗ POST рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржмрзЗред

req: ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ ржкрж╛ржарж╛ржирзЛ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржЕржмржЬрзЗржХрзНржЯ

res: рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ ржкрж╛ржарж╛ржирзЛ рж░рзЗрж╕ржкржирзНрж╕ ржЕржмржЬрзЗржХрзНржЯ

ЁЯФ╕ const user = req.body;
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ req.body ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржирж┐ржЪрзНржЫрж┐, ржпрж╛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ (ржпрзЗржоржи Postman ржмрж╛ ржлрзНрж░ржирзНржЯржПржирзНржб ржлрж░рзНржо) ржерзЗржХрзЗ JSON ржлрж░ржорзНржпрж╛ржЯрзЗ ржкрж╛ржарж╛ржирзЛ рж╣рзЯрзЗржЫрзЗред

const user ржорж╛ржирзЗ рж╣рж▓рзЛ тАФ ржЖржорж░рж╛ ржПржХржЯрж┐ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ рждрзИрж░рж┐ ржХрж░рж▓рж╛ржо ржпрж╛рж░ ржирж╛ржо user, ржПржмржВ рждрж╛рждрзЗ ржЖржорж░рж╛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ ржкрж╛ржарж╛ржирзЛ ржбрзЗржЯрж╛ рж░рж╛ржЦрж▓рж╛ржоред

ЁЯзк ржЙржжрж╛рж╣рж░ржг: ржпржжрж┐ рждрзБржорж┐ Postman ржжрж┐рзЯрзЗ ржПржЗржнрж╛ржмрзЗ ржбрзЗржЯрж╛ ржкрж╛ржарж╛ржУ:
ЁЯЯж POST: http://localhost:5000/users
json
Copy
Edit
{
  "id": 1,
  "name": "Ersa"
}
рждржЦржи req.body ржПрж░ ржорж╛ржи рж╣ржмрзЗ:
js
Copy
Edit
{ id: 1, name: "Ersa" }
рждрж╛рж╣рж▓рзЗ const user = req.body; ржПрж░ ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ ржПржЦржи user ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗ рж╕рзЗржЗ ржбрзЗржЯрж╛ ржЖржЫрзЗред

тЬЕ ржХрзЛржбрзЗ ржПржХржЯрзБ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗ response ржкрж╛ржарж╛рж▓рзЗ ржпрзЗржоржи:
app.post("/users", (req, res) => {
    const user = req.body;
    res.send(user); // sending the received user data back as response
});
рждрж╛рж╣рж▓рзЗ рждрзБржорж┐ ржпрзЗ ржбрзЗржЯрж╛ ржкрж╛ржарж╛ржмрзЗ, рж╕рзЗржЯрж╛ рж░рзЗрж╕ржкржирзНрж╕ рж╣рж┐рж╕рзЗржмрзЗржУ ржлрж┐рж░рзЗ ржкрж╛ржмрзЗред


тЬЕ app.use(express.json());
ржПржЯрж╛ Express ржПрж░ ржПржХржЯрж╛ built-in middlewareред

ржПрж░ ржХрж╛ржЬ: ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржерзЗржХрзЗ ржкрж╛ржарж╛ржирзЛ JSON ржбрзЗржЯрж╛ ржкрж╛рж░рзНрж╕ ржХрж░рзЗ req.body-рждрзЗ рж░рж╛ржЦрж╛ред

ржПржЗ рж▓рж╛ржЗржиржЯрж╛ ржирж╛ ржжрж┐рж▓рзЗ POST ржмрж╛ PUT рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯрзЗ ржкрж╛ржарж╛ржирзЛ JSON ржбрзЗржЯрж╛ undefined ржерж╛ржХржмрзЗред

тЬЕ const logger = (req, res, next) => { ... }
ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ custom middleware function
Express-ржП middleware рж╣ржЪрзНржЫрзЗ ржПржоржи ржПржХ ржлрж╛ржВрж╢ржи, ржпрж╛ request ржЖрж░ response ржПрж░ ржорж╛ржЭржЦрж╛ржирзЗ ржЪрж▓рзЗред

ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░:
req	Request object (ржпрзЗржЯрж╛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржкрж╛ржарж┐рзЯрзЗржЫрзЗ)
res	Response object (ржпрзЗржЯрж╛ рж╕рж╛рж░рзНржнрж╛рж░ ржкрж╛ржарж╛ржмрзЗ)
next	ржкрж░ржмрж░рзНрждрзА middleware ржмрж╛ route handler-ржП ржпрж╛ржУрзЯрж╛рж░ ржЬржирзНржп ржХрж▓ ржХрж░рждрзЗ рж╣рзЯ

тЬЕ console.log(\${req.method} ${req.url} - ${req.ip}`);`
ржПржЯрж╛ ржХржирж╕рзЛрж▓рзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯрзЗрж░ рждржерзНржп ржжрзЗржЦрж╛ржЪрзНржЫрзЗ:

req.method: HTTP ржорзЗржержб тАФ ржпрзЗржоржи GET, POST, PUT, DELETE

req.url: ржЗржЙржЖрж░ржПрж▓ ржкрж╛рже тАФ ржпрзЗржоржи /users

req.ip: ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ IP address (ржпрзЗ IP ржерзЗржХрзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржПрж╕рзЗржЫрзЗ)

ЁЯУМ ржзрж░рзЛ рждрзБржорж┐ http://localhost:5000/users-ржП POST ржХрж░рзЗржЫрзЛ, рждрж╛рж╣рж▓рзЗ ржХржирж╕рзЛрж▓рзЗ ржПржоржи ржХрж┐ржЫрзБ ржжрзЗржЦрж╛ржмрзЗ:
POST /users - ::1

тЬЕ next();
ржПржЯрж┐ ржЕрждрзНржпржирзНржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг тАФ next() ржХрж▓ ржирж╛ ржХрж░рж▓рзЗ, рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржПржЦрж╛ржирзЗржЗ ржЖржЯржХрзЗ ржпрж╛ржмрзЗ!

ржПржЗ ржлрж╛ржВрж╢ржи ржХрж▓ ржХрж░рж▓рзЗ Express ржмрзБржЭржмрзЗ, ржПржЦржи ржкрж░ржмрж░рзНрждрзА middleware ржмрж╛ route handler-ржП ржпрж╛ржУрзЯрж╛рж░ рж╕ржорзЯред

ЁЯФБ ржПржХ ржХржерж╛рзЯ: middleware-ржПрж░ ржХрж╛ржЬ рж╢рзЗрж╖, ржПржЦржи ржкрж░ржмрж░рзНрждрзА ржзрж╛ржкрзЗ ржпрж╛ржУ!

тЬЕ app.use(logger);
ржПржЗ рж▓рж╛ржЗржиржЯрж┐ ржжрж┐рзЯрзЗ ржЖржорж░рж╛ logger middleware-ржЯрж┐ржХрзЗ ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржирзЗ activate ржХрж░рзЗржЫрж┐ред

ржПржЦржи ржпрзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯржЗ ржЖрж╕рзБржХ ржирж╛ ржХрзЗржи, ржПржЗ logger middleware рж╕ржмрж╛рж░ ржЖржЧрзЗ ржЪрж╛рж▓рж╛ржмрзЗред


ЁЯФ╕ const cors = require("cors");
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
require("cors"):
Node.js-ржП cors ржкрзНржпрж╛ржХрзЗржЬржХрзЗ ржЖржорж╛ржжрзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржирж┐рзЯрзЗ ржЖрж╕рж╛ рж╣ржЪрзНржЫрзЗред

cors:
ржПржЯрж╛ ржПржХржЯрж╛ middleware ржпрж╛ Cross-Origin requests ржХрзЗ handle ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

ЁЯУМ Cross-Origin ржорж╛ржирзЗ: ржпржжрж┐ рждрзЛржорж╛рж░ ржлрзНрж░ржирзНржЯржПржирзНржб ржПржмржВ ржмрзНржпрж╛ржХржПржирзНржб ржнрж┐ржирзНржи origin (domain, port, or protocol)-ржП ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ browser security ржПрж░ ржХрж╛рж░ржгрзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржмрзНрж▓ржХ рж╣рзЯрзЗ ржпрж╛рзЯред

ЁЯЫа ржПржЬржирзНржп cors middleware ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржмрж▓рзЗ ржжрж┐ржЗ тАФ "ржПржЗ рж╕рж╛рж░рзНржнрж╛рж░рзЗ ржХрзЛржи ржХрзЛржи origin ржерзЗржХрзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржЖрж╕рж▓рзЗ рждрж╛ ржЕржирзБржорждрж┐ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗред"

ЁЯФ╕ app.use(cors({ origin: '*' }));
ЁЯСЙ ржмрзНржпрж╛ржЦрзНржпрж╛:
app.use(...):
Express ржП middleware ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯред

cors(...):
ржЖржорж░рж╛ CORS middleware ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрж┐ред

{ origin: '*' }:
ржПрж░ ржорж╛ржирзЗ тАФ рж╕ржм origin (domain ржмрж╛ port) ржерзЗржХрзЗ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржЖрж╕рж▓рзЗ рж╕рзЗржЯрж╛ allow ржХрж░рж╛ рж╣ржмрзЗред

ЁЯУМ '*' ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ open access: ржпрзЗ ржХрзЗржЙ ржпрзЗржХрзЛржирзЛ ржЬрж╛ржпрж╝ржЧрж╛ ржерзЗржХрзЗ ржПржЗ API ржЗржЙржЬ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

тЬЕ ржПржЯрж╛ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯрзЗ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗ, ржХрж┐ржирзНрждрзБ ржкрзНрж░рзЛржбрж╛ржХрж╢ржирзЗ ржирж┐рж░рж╛ржкрждрзНрждрж╛рж░ ржЬржирзНржп ржирж┐рж░рзНржжрж┐рж╖рзНржЯ origin ржжрж┐рждрзЗ рж╣рзЯ ржпрзЗржоржи:
origin: "http://localhost:3000"


ЁЯФ╕ require('dotenv').config();
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
require('dotenv'):
ржЖржорж░рж╛ dotenv ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржкрзНржпрж╛ржХрзЗржЬ ржЗржоржкрзЛрж░рзНржЯ ржХрж░ржЫрж┐ред ржПржЯрж┐ .env ржлрж╛ржЗрж▓рзЗрж░ ржнрзЗрждрж░рзЗрж░ ржЧрзЛржкржи рждржерзНржп (ржпрзЗржоржи ржЗржЙржЬрж╛рж░ржирзЗржо, ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб) ржкрж░рж┐ржмрзЗрж╢ ржнрзНржпрж╛рж░рж┐ржпрж╝рзЗржмрж▓ рж╣рж┐рж╕рзЗржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржжрзЗрзЯред

.config():
ржПржЯрж┐ ржХрж▓ ржХрж░рж▓рзЗ .env ржлрж╛ржЗрж▓рзЗрж░ рж╕ржм рждржерзНржп process.env ржПрж░ ржоржзрзНржпрзЗ ржЪрж▓рзЗ ржЖрж╕рзЗред

ЁЯУМ ржПржХ ржХржерж╛рзЯ: ржПржЗ рж▓рж╛ржЗржиржЯрж┐ ржжрж┐рзЯрзЗ .env ржлрж╛ржЗрж▓рзЗрж░ ржнрзЗрждрж░рзЗрж░ ржбрзЗржЯрж╛ ржЖржорж░рж╛ process.env.DB_USER, process.env.DB_PASS ржПрж░ ржорждрзЛ ржХрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

ЁЯФ╕ const { MongoClient, ServerApiVersion, ObjectId } = require('mongodb');
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
require('mongodb'):
MongoDB ржПрж░ official Node.js рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржоржкрзЛрж░рзНржЯ ржХрж░ржЫрж┐ред

{ MongoClient, ServerApiVersion, ObjectId }:
ржЖржорж░рж╛ ржПржЦрж╛ржирзЗ mongodb ржкрзНржпрж╛ржХрзЗржЬрзЗрж░ ржнрж┐рждрж░рзЗрж░ ржХрж┐ржЫрзБ рж╕рзНржкрзЗрж╢рж╛рж▓ ржЬрж┐ржирж┐рж╕ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ ржирж┐ржЪрзНржЫрж┐:

ржЕржВрж╢	ржХрж╛ржЬ
MongoClient	MongoDB рж╕рж╛рж░рзНржнрж╛рж░рзЗ connect ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗ
ServerApiVersion	API version рж╕рзЗржЯ ржХрж░рж╛рж░ ржЬржирзНржп (optional)
ObjectId	MongoDB-ржПрж░ unique ID (ржпрзЗржЯрж╛ _id ржирж╛ржорзЗ ржерж╛ржХрзЗ) рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рждрзЗ

ЁЯУМ ObjectId рж▓рж╛ржЧрзЗ ржпржЦржи ржХрзЛржирзЛ ржбрзЗржЯрж╛ ржЖржкржбрзЗржЯ ржмрж╛ ржбрж┐рж▓рж┐ржЯ ржХрж░рждрзЗ рж╣рзЯ _id ржжрж┐рзЯрзЗред

ЁЯФ╕ const uri = ...
const uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.dk8ve.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`;
ЁЯФН ржмрзНржпрж╛ржЦрзНржпрж╛:
ржЖржорж░рж╛ ржПржХржЯрж┐ URI (Uniform Resource Identifier) ржмрж╛ржирж╛ржЪрзНржЫрж┐, ржпрзЗржЯрж╛ MongoDB рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ ржХрж╛ржирзЗржХрзНржЯ ржХрж░рж╛рж░ ржарж┐ржХрж╛ржирж╛ред

ржПржЗ URI рждрзЗ ржЗржЙржЬрж╛рж░ржирзЗржо ржУ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржирж┐ржЪрзНржЫрж┐ .env ржлрж╛ржЗрж▓ ржерзЗржХрзЗ:

${process.env.DB_USER} тЖТ .env ржлрж╛ржЗрж▓рзЗ ржпрзЗржЯрж╛ рж▓рж┐ржЦрзЗржЫрзЛ: DB_USER=yourUser

${process.env.DB_PASS} тЖТ .env ржлрж╛ржЗрж▓рзЗ ржпрзЗржЯрж╛ рж▓рж┐ржЦрзЗржЫрзЛ: DB_PASS=yourPassword

cluster0.dk8ve.mongodb.net тЖТ ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ рждрзЛржорж╛рж░ MongoDB Atlas ржПрж░ cluster addressред

?retryWrites=true&w=majority&appName=Cluster0 тЖТ ржПржЧрзБрж▓рзЛ рж╣ржЪрзНржЫрзЗ MongoDB ржХрж╛ржирзЗржХрж╢ржирзЗрж░ ржХрж┐ржЫрзБ рж╕рзЗржЯрж┐ржВрж╕:

retryWrites=true тЖТ рж▓рзЗржЦрж╛рж░ рж╕ржорзЯ error рж╣рж▓рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░ржмрзЗред

w=majority тЖТ рж▓рж┐ржЦрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рждрзЗ server ржПрж░ majority node ржП рж▓рзЗржЦрзЗред

appName=Cluster0 тЖТ Optional App Nameред

ЁЯФ╕ new MongoClient(uri)
MongoClient рж╣ржЪрзНржЫрзЗ MongoDB рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐рж░ ржПржХржЯрж┐ class (constructor function)ред

new MongoClient(uri) ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ тЖТ ржирждрзБржи ржПржХржЯрж┐ MongoDB Client рждрзИрж░рж┐ ржХрж░рзЛ ржПржЗ URI ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗред

uri ржПрж░ ржнрж┐рждрж░рзЗ ржЖржЫрзЗ рждрзЛржорж╛рж░ database connection string:

const uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0...`;
ржПржЗ client ржЕржмржЬрзЗржХрзНржЯ-ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛:

MongoDB рждрзЗ connect ржХрж░рждрзЗ ржкрж╛рж░рж┐

ржбрзЗржЯрж╛ржмрзЗрж╕ ржУ collection access ржХрж░рждрзЗ ржкрж╛рж░рж┐

ржбрзЗржЯрж╛ insert, find, update, delete ржХрж░рждрзЗ ржкрж╛рж░рж┐

ЁЯОп рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ ржмрзБржЭрж┐:
ЁЯФ╣ рждрзБржорж┐ client ржмрж╛ржирж┐рзЯрзЗ ржмрж▓ржЫрзЛ:

"ржПржЗ client ржЕржмржЬрзЗржХрзНржЯржЯрж╛ MongoDB рждрзЗ connect рж╣ржмрж╛рж░ ржЬржирзНржп рждрзИрж░рж┐, рждрж╛рж░ ржарж┐ржХрж╛ржирж╛ (URI) ржПржЗржЯрж╛ред"


app.get("/get-data", async (req, res) => { ... })
тАФ Route рждрзИрж░рж┐ ржХрж░ржЫрзЛред ржпржЦржи ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржмрж╛ Postman-ржП GET /get-data ржХрж░ржмрзЗ рждржЦржи ржПрж░ ржнрж┐рждрж░ржХрж╛рж░ ржХрж╛ржЬ рж╣ржмрзЗред

req = request (ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржХрзА ржкрж╛ржарж┐рзЯрзЗржЫрзЗ)

res = response (рждрзБржорж┐ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржХрзА ржжрж┐ржмрзЗ)

async ржжрж┐рзЯрзЗ ржмрж▓ржЫрзЛ: ржнрж┐рждрж░рзЗ ржЖржорж░рж╛ ржЕржкрзЗржХрзНрж╖рж╛ (await) ржХрж░ржм ржПржХржЯрж╛ ржХрж╛ржЬрзЗрж░ ржЬржирзНржп тАФ ржХрж╛рж░ржг DB ржХрж▓ рж╕ржорзЯ ржирзЗрзЯред

const data = await gymCollection.find().toArray();
тАФ find() рж╕ржм ржбржХрзБржорзЗржирзНржЯ ржЦрзЛржБржЬрзЗ (ржпржжрж┐ ржХрзЛржирзЛ filter ржирж╛ ржжрж╛ржУ)ред find() ржПржХржЯрж╛ cursor ржжрзЗрзЯ; .toArray() ржмрж▓рж▓рзЗ рж╕ржмржЧрзБрж▓рзЛ ржПржХрж╕рж╛ржерзЗ ржирж┐рзЯрзЗ ржПржХржЯрж╛ ржЕрзНржпрж╛рж░рзЗрждрзЗ ржжрзЗрзЯред await ржмрж╕рж╛ржирзЛрж░ ржорж╛ржирзЗ тАФ ржПржЦрж╛ржирзЗ ржерж╛ржорзЛ ржпрждржХрзНрж╖ржг ржирж╛ DB ржерзЗржХрзЗ рж╕ржм ржбрзЗржЯрж╛ ржЖрж╕рзЗред
рж╕рждрж░рзНржХрждрж╛: ржХрж╛рж▓рзЗржХрж╢ржирзЗ ржЕржирзЗржХ ржбржХрзБржорзЗржирзНржЯ ржерж╛ржХрж▓рзЗ ржПржЗржЯрж╛ рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ ржорзЗржорзЛрж░рж┐ ржирж┐рзЯрзЗ ржлрзЗрж▓рждрзЗ ржкрж╛рж░рзЗ тАФ ржЫрзЛржЯ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржарж┐ржХ ржЖржЫрзЗред

res.send(data);
тАФ ржЖржЧрзЗрж░ рж▓рж╛ржЗржи ржерзЗржХрзЗ ржкрж╛ржУрзЯрж╛ data (ржЕрзНржпрж╛рж░рзЗ) ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржкрж╛ржарж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрзЛред Express ржПржЯрж╛ JSON рж╣рж┐рж╕рзЗржмрзЗ ржкрж╛ржарж╛ржмрзЗред

app.post("/add-data", async (req, res) => { ... })
тАФ POST route тАФ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржПржЦрж╛ржирзЗ ржирждрзБржи ржбрзЗржЯрж╛ ржкрж╛ржарж╛ржмрзЗ (add ржХрж░рждрзЗ)ред

const data = req.body;
тАФ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржпрж╛ ржкрж╛ржарж┐рзЯрзЗржЫрзЗ (JSON) рж╕рзЗржЯрж╛ req.body ржП ржерж╛ржХржмрзЗред ржоржирзЗ рж░рж╛ржЦржмрзЗ: ржПржЯрж╛ ржкрзЗрждрзЗ рж╣рж▓рзЗ app.use(express.json()) рждрзЛржорж╛рж░ рж╕рж╛рж░рзНржнрж╛рж░рзЗ ржерж╛ржХрждрзЗ рж╣ржмрзЗ тАФ ржирж╛ рж╣рж▓рзЗ req.body ржЦрж╛рж▓рж┐ ржерж╛ржХржмрзЗред

console.log("added data: ", data);
тАФ рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ ржЯрж╛рж░рзНржорж┐ржирж╛рж▓рзЗ ржжрзЗржЦрж╛ ржпрж╛ржмрзЗ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржХрзА ржкрж╛ржарж┐рзЯрзЗржЫрзЗ тАФ ржбрж┐ржмрж╛ржЧрзЗрж░ ржЬржирзНржп ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗред

const result = await gymCollection.insertOne(data);
тАФ insertOne() ржжрж┐рзЯрзЗ data'ржХрзЗ gym ржХрж╛рж▓рзЗржХрж╢ржирзЗ рж░рзЗржЦрзЗ ржжрж┐ржЪрзНржЫрзЛред await ржорж╛ржирзЗ: ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржмрзЗ ржпрждржХрзНрж╖ржг ржирж╛ ржоржЩрзНржЧрзЛ ржЗржирж╕рж╛рж░рзНржЯ рж╢рзЗрж╖ ржХрж░рзЗред result ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ ржкрж╛ржУрзЯрж╛ ржпрж╛ржмрзЗ ржпрж╛рж░ ржоржзрзНржпрзЗ ржерж╛ржХрзЗ insertedId ржЗрждрзНржпрж╛ржжрж┐ред

res.send(result);
тАФ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржмрж▓рзЗ ржжрж╛ржУ ржЗржирж╕рж╛рж░рзНржЯ рж╕ржлрж▓ рж╣рзЯрзЗржЫрзЗ (ржмрж╛ ржХрзЗржоржирзЗ рж╣рзЯрзЗржЫрзЗ) тАФ result ржжрзЗрзЯрж╛рж░ ржлрж▓рзЗ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ insertedId ржкрж╛ржмрзЗред

console.log("result send to mongodb: ", result);
тАФ рж╕рж╛рж░рзНржнрж╛рж░рзЗ ржЖржмрж╛рж░ рж░рзЗржЬрж╛рж▓рзНржЯ рж▓рзЛржЧ ржХрж░ржЫрзЛ тАФ ржбрж┐ржмрж╛ржЧрзЗ рж╕рзБржмрж┐ржзрж╛ред


app.patch("/patch-update/:id", ...)

ржПржЯрж╛ ржПржХржЯрж╛ PATCH request routeред

PATCH ржорж╛ржирзЗ ржбрж╛ржЯрж╛ржмрзЗрж╕рзЗрж░ ржХрзЛржи ржбржХрзБржорзЗржирзНржЯ ржЖржВрж╢рж┐ржХ ржЖржкржбрзЗржЯ ржХрж░рж╛ (рж╕ржм data replace ржирж╛ ржХрж░рзЗ, рж╢рзБржзрзБ ржХрж┐ржЫрзБ field ржмржжрж▓рж╛ржирзЛ)ред

:id ржорж╛ржирзЗ client ржерзЗржХрзЗ ржЖрж╕рж╛ ржбрж╛ржЗржирж╛ржорж┐ржХ ржнрзНржпрж╛рж▓рзБ (ржпрзЗржоржи /patch-update/66b8c... рж╣рж▓рзЗ рж╕рзЗржЯрж╛ id рж╣ржмрзЗ)ред

const id = req.params.id;

URL ржерзЗржХрзЗ id ржирж┐рзЯрзЗ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗ рж░рж╛ржЦржЫрж┐ред

const data = req.body;

Client request body рждрзЗ ржпрзЗ data ржкрж╛ржарж╛ржмрзЗ, рж╕рзЗржЯрж╛ data ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗ рж░рж╛ржЦржЫрж┐ред

const query = { _id: new ObjectId(id) };

MongoDB ржбрж╛ржЯрж╛ржмрзЗрж╕рзЗ ржбржХрзБржорзЗржирзНржЯ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛рж░ рж╢рж░рзНрждред

_id ржХрзЗ MongoDB ржПрж░ ObjectId рждрзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░ржЫрж┐, ржХрж╛рж░ржг рж╢рзБржзрзБ string рж╣рж▓рзЗ match ржХрж░ржмрзЗ ржирж╛ред

const update = { $set: data };

$set MongoDB ржПрж░ special operator ржпрж╛ рж╢рзБржзрзБ ржжрзЗржУржпрж╝рж╛ field update ржХрж░рзЗред

const result = await gymCollection.updateOne(query, update);

MongoDB ржПрж░ updateOne() method ржжрж┐ржпрж╝рзЗ matching document update ржХрж░ржЫрж┐ред

res.send(result);

Update operation ржПрж░ ржлрж▓рж╛ржлрж▓ client ржПрж░ ржХрж╛ржЫрзЗ ржкрж╛ржарж╛ржЪрзНржЫрж┐ред



==========================================
params(dynamec id, routing)
query (pagination, filter, search),
body(post, put, patch)
==========================================